export declare const OR: (pred1: any, pred2: any) => (value: any) => any;
export declare const AND: (pred1: any, pred2: any) => (value: any) => any;
export declare const exclude: any;
export declare const isNotNil: any;
export declare const highlight: (word: any, HIGHLIGHT_DELIMETER?: string) => (str: any) => any;
export declare const removeTag: (html: any) => any;
export declare const peek: (...args: any[]) => (value: any) => any;
export declare const go: (...args: any[]) => any;
export declare const constant: (value: any) => () => any;
export declare const noop: () => void;
export declare const indexMap: (...args: any[]) => unknown[] | ((list: any) => void);
export declare const idEqual: any;
export declare const findById: any;
export declare const updateBy: any;
export declare const removeBy: (pred: any) => (list: any) => any;
export declare const updateById: any;
export declare const removeById: any;
export declare const getProtocol: (url: any) => any;
export declare const assignQueryParams: (url: any) => (paramObj: any) => void;
export declare const appendQueryParams: (paramObj: any) => void;
export declare const copyToClipboard: (val: any) => void;
export declare const blinkDomElement: (dom: any) => void;
export declare const timer: (timeout: any) => Promise<unknown>;
export declare const esModule: (_module: any) => any;
export declare function removeExt(filename: any): any;
export declare const getFileName: (path: any, ext?: boolean) => any;
export declare const nl2br: (str: any) => any;
export declare const createRandomString: (length?: number) => string;
export declare const getQueryParams: (url: any) => {};
export declare const setQueryParams: (paramObj: any) => void;
export declare const delay: (fn: any, ms: any) => Promise<unknown>;
export declare const onlyNumber: (event: any) => void;
export declare const numberWithCommas: (num: any) => any;
export declare const enableUrl: (str: any) => any;
export declare const loadJs: (src: any) => Promise<unknown>;
export declare const sortKeys: (obj: any, pred: any) => {};
